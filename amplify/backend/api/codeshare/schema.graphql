

type ClassTable @model (
  mutations: {create: "createClassTable", delete: "deleteClassTable", update: null}
)
# @auth(rules:[
#   {allow: owner, ownerField: "ownerUserID", provider: userPools, operations:[read, create, delete]},
# ])
@auth(rules: [{allow: owner, ownerField: "ownerUserID", provider: userPools, operations:[read, create, delete]}, 
              {allow: groups, groups: ["Admin"] },
              {allow: private , operations:[read, create, delete]}])
# @auth(rules: [{ allow: public, provider: userPools, operations:[read, create, delete]}])
@key(name: "userID", fields:["OwnerUserID"], queryField: "showClassByOwner")
{
  OwnerUserID: ID!
  ClassName: String!
  Comment: String!
}

type RoomTable @model (
  mutations: {create: "createRoomTable", delete: "deleteRoomTable", update: null}
)
# @auth(rules:[
#   {allow: owner, ownerField: "ownerUserID", provider: userPools, operations:[read, create, delete]},
# ])
@auth(rules: [{allow: owner, ownerField: "ownerUserID", provider: userPools, operations:[read, create, delete]}, 
              {allow: groups, groups: ["Admin"] },
              {allow: private , operations:[read, create, delete]}])
@key(name: "userID", fields:["OwnerUserID"], queryField: "showByOwner")
{
  OwnerUserID: ID!
  RoomName: String!
  Comment: String!
  ClassID: ID!
}

type FileTable @model (
  mutations: {create: "createFileTable", delete: "deleteFileTable", update: "updateFileTable"}
)
# @auth(rules:[
#   {allow: owner, ownerField: "ownerUserID", provider: userPools, operations:[read, create, delete]},
# ])
@auth(rules: [{allow: owner, ownerField: "ownerUserID", provider: userPools, operations:[read, create, delete]}, 
              {allow: groups, groups: ["Admin"] },
              {allow: private , operations:[read, create, delete]}])
@key(name: "userID", fields:["UserID"], queryField: "showFileByOwner")
{
  UserID: ID!
  FileName: String!
  # FileID: String!
  Comment: String!
}

type MyPageTable @model (
  mutations: {create: "createMyPageColum", delete: "deleteMyPageColum", update: "updateMyPage"}
)
# @auth(rules:[
#   {allow: owner, ownerField: "UserID", provider: userPools, operations:[read, create, delete]},
# ])
@auth(rules: [{allow: owner, ownerField: "ownerUserID", provider: userPools, operations:[read, create, delete]}, 
              {allow: groups, groups: ["Admin"] },
              {allow: private , operations:[read, create, delete]}])
@key(name: "userID", fields:["UserID"], queryField: "showMyPage")
{
  UserID: ID!
  ClassID: [ID!]
}
